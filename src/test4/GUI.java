/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package test4;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tienl
 */
public class GUI extends javax.swing.JFrame {
    private Student[] students;
    /**
     * Creates new form GUI
     */
    public GUI(Student[] students) {
        this.students = students;
        initComponents();
        text.requestFocus();
        displayStudents(this.students); // Hiển thị dữ liệu ban đầu
        // Đăng ký sự kiện KeyListener cho ô nhập liệu
        text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textKeyReleased(evt);
            }
        });
        timkiem.setEnabled(false);
    }

    private GUI() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nhap = new javax.swing.JLabel();
        text = new javax.swing.JTextField();
        timkiem = new javax.swing.JButton();
        thoat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bangthongtin = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nhap.setText("Nhap MSV:");

        text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textActionPerformed(evt);
            }
        });

        timkiem.setText("Search");
        timkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timkiemActionPerformed(evt);
            }
        });

        thoat.setText("Exit");
        thoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thoatActionPerformed(evt);
            }
        });

        bangthongtin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Sinh viên ", "Họ tên", "Tuổi", "Giới tính", "Chuyên Ngành "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(bangthongtin);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(57, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(nhap)
                        .addGap(26, 26, 26)
                        .addComponent(text, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95))))
            .addGroup(layout.createSequentialGroup()
                .addGap(213, 213, 213)
                .addComponent(thoat, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nhap)
                    .addComponent(text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timkiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(thoat)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void thoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thoatActionPerformed

          System.exit(0);
    }//GEN-LAST:event_thoatActionPerformed

    private void textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textActionPerformed
        // TODO add your handling code here:
         String textContent = text.getText().trim();

        // Kiểm tra nếu trường nhập MSV không rỗng
        if (!text.getText().isEmpty()) {
            // Kích hoạt nút Tìm kiếm
            timkiem.setEnabled(true);
        }
        else{
            timkiem.setEnabled(false);
        }
    }//GEN-LAST:event_textActionPerformed

    private void timkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timkiemActionPerformed
        // TODO add your handling code here:
        String studentID = text.getText().trim();
        // Kiểm tra xem mã sinh viên có chứa kí tự không phải là số không
        if (!studentID.matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Mã sinh viên chỉ được phép nhập kí tự số.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (studentID.length() != 9) {
            JOptionPane.showMessageDialog(this, "Mã sinh viên phải có đúng 9 kí tự.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
         // Lấy mã sinh viên từ ô nhập liệu
        String StudentID = text.getText().trim();
        DefaultTableModel model = (DefaultTableModel) bangthongtin.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ trên bảng
        boolean found = false;
        // Duyệt qua danh sách sinh viên và thêm vào bảng nếu tìm thấy
        for (Student student : students) {
            if (student != null && student.studentID.equals(StudentID)) {
                model.addRow(new Object[]{
                    student.studentID,
                    student.name,
                    student.age,
                    student.gender,
                    student.getSpecialization()
                });
            found = true;
            break;
            }
        }

    if (!found) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy sinh viên với mã số " + StudentID, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            displayStudents(this.students); // Hiển thị lại dữ liệu ban đầu nếu không tìm thấy sinh viên
        }
    }//GEN-LAST:event_timkiemActionPerformed
    public void displayStudents(Student[] students) {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Mã sinh viên");
        model.addColumn("Họ Tên");
        model.addColumn("Tuổi");
        model.addColumn("Giới tính");
        model.addColumn("Chuyên ngành");

        for (Student student : students) {
            String specialization = "";
            if (student instanceof ITStudent) {
                specialization = ((ITStudent) student).getSpecialization();
            } else if (student instanceof BusinessStudent) {
                specialization = ((BusinessStudent) student).getSpecialization();
            } else if (student instanceof LanguageStudent) {
                specialization = ((LanguageStudent) student).getSpecialization();
            }
            model.addRow(new Object[]{student.studentID, student.name, student.age, student.gender, specialization});

        }

        bangthongtin.setModel(model);
    }
    private void textKeyReleased(java.awt.event.KeyEvent evt) {                                  
        // Lấy text từ JTextField
        String textContent = text.getText().trim();

        // Kiểm tra độ dài của mã sinh viên và xem liệu tất cả các ký tự có phải là số không
        if (textContent.length() >= 1 && isNumeric(textContent)) {
            // Kích hoạt nút Tìm kiếm
            timkiem.setEnabled(true);
        } else {
            // Vô hiệu hóa nút Tìm kiếm
            timkiem.setEnabled(false);
        }
    }
    // Phương thức kiểm tra xem một chuỗi có chứa toàn kí tự số hay không
    private boolean isNumeric(String str) {
        for (char c : str.toCharArray()) {
            if (!Character.isDigit(c)) {
                return false;
            }
        }
        return true;
    }

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bangthongtin;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nhap;
    private javax.swing.JTextField text;
    private javax.swing.JButton thoat;
    private javax.swing.JButton timkiem;
    // End of variables declaration//GEN-END:variables
}
